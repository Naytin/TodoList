[{"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\reportWebVitals.ts":"1","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\todolist-api.ts":"2","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\index.tsx":"3","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\task-api.ts":"4","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\Task.stories.tsx":"5","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\todolist-api.stories.tsx":"6","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\task-api.stories.tsx":"7","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\AddItemForm\\AddItemForm.tsx":"8","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\EditableSpan\\EditableSpan.tsx":"9","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\Todolist\\Task\\Task.tsx":"10","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\tasksReducer.ts":"11","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\Todolist\\TodoList.tsx":"12","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\App.tsx":"13","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\TotolistsList.tsx":"14","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\store.ts":"15","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\todolistReducer.ts":"16","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\EditableSpan.stories.tsx":"17","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\app.Reducer.ts":"18","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\ErrorSnackBar\\ErrorSnackBar.tsx":"19","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\utils\\error-utils.ts":"20"},{"size":440,"mtime":1618586872932,"results":"21","hashOfConfig":"22"},{"size":1014,"mtime":1619284027100,"results":"23","hashOfConfig":"22"},{"size":605,"mtime":1619287138324,"results":"24","hashOfConfig":"22"},{"size":1893,"mtime":1620486255281,"results":"25","hashOfConfig":"22"},{"size":1782,"mtime":1620486481394,"results":"26","hashOfConfig":"22"},{"size":1742,"mtime":1619026692850,"results":"27","hashOfConfig":"22"},{"size":2127,"mtime":1620466260497,"results":"28","hashOfConfig":"22"},{"size":1553,"mtime":1620478482785,"results":"29","hashOfConfig":"22"},{"size":1268,"mtime":1620478482789,"results":"30","hashOfConfig":"22"},{"size":1797,"mtime":1620486661314,"results":"31","hashOfConfig":"22"},{"size":7707,"mtime":1620490061944,"results":"32","hashOfConfig":"22"},{"size":3730,"mtime":1620486040215,"results":"33","hashOfConfig":"22"},{"size":1695,"mtime":1620475949807,"results":"34","hashOfConfig":"22"},{"size":1968,"mtime":1620485943853,"results":"35","hashOfConfig":"22"},{"size":1246,"mtime":1620466435541,"results":"36","hashOfConfig":"22"},{"size":6071,"mtime":1620492955078,"results":"37","hashOfConfig":"22"},{"size":813,"mtime":1619286510610,"results":"38","hashOfConfig":"22"},{"size":1122,"mtime":1620478576864,"results":"39","hashOfConfig":"22"},{"size":1046,"mtime":1620476421321,"results":"40","hashOfConfig":"22"},{"size":777,"mtime":1620476965700,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14moyvu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\reportWebVitals.ts",[],["84","85"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\todolist-api.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\index.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\task-api.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\Task.stories.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\todolist-api.stories.tsx",["86"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\task-api.stories.tsx",["87"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\AddItemForm\\AddItemForm.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\EditableSpan\\EditableSpan.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\Todolist\\Task\\Task.tsx",["88","89","90"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\tasksReducer.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\Todolist\\TodoList.tsx",["91","92","93","94","95","96"],"import React, {useCallback, useEffect} from 'react';\r\nimport {Button, IconButton} from '@material-ui/core';\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {AddItemForm} from \"../../../Components/AddItemForm/AddItemForm\";\r\nimport {EditableSpan} from \"../../../Components/EditableSpan/EditableSpan\";\r\nimport Task from \"./Task/Task\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addTaskTC, fetchTasksTC} from \"../tasksReducer\";\r\nimport {\r\n    changeFilterAC,\r\n    deleteTodolistsTC,\r\n    FilterValuesType,\r\n    TodolistDomainType,\r\n    updateTodolistTitleTC\r\n} from \"../todolistReducer\";\r\nimport {TaskStatuses, TaskType} from \"../../../api/task-api\";\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    filter: FilterValuesType\r\n    todolistId: string\r\n}\r\n\r\nexport const Todolist = React.memo((props: PropsType) =>  {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksTC(props.todolistId))\r\n    },[])//no dependencies. runs only once when the component will render\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        dispatch(addTaskTC(title.trim(), props.todolistId))\r\n    },[dispatch]);\r\n    const changeTodoListTitle = useCallback((newTitle: string) => {\r\n\r\n        dispatch(updateTodolistTitleTC(props.todolistId, newTitle))\r\n    },[dispatch, props.todolistId])\r\n\r\n    const changeFilter = useCallback((value: FilterValuesType, taskId: string) => {\r\n        dispatch(changeFilterAC(value, taskId));\r\n    },[dispatch])\r\n\r\n    const removeTodolist = useCallback((id: string) => {\r\n        dispatch(deleteTodolistsTC(id))\r\n    },[])\r\n\r\n    const onAllClickHandler = useCallback(() => {\r\n        changeFilter(\"all\", props.todolistId)\r\n    },[]);\r\n    const onActiveClickHandler = useCallback(() => {\r\n        changeFilter(\"active\", props.todolistId)\r\n    },[]);\r\n    const onCompletedClickHandler = useCallback(() => {\r\n        changeFilter(\"completed\", props.todolistId)\r\n    },[])\r\n\r\n\r\n    let allTodoLists = props.tasks;\r\n    let tasksForTodolist = allTodoLists\r\n    if (props.filter === \"active\") {\r\n        tasksForTodolist = allTodoLists.filter(t => t.status === TaskStatuses.New);\r\n    }\r\n    if (props.filter === \"completed\") {\r\n        tasksForTodolist = allTodoLists.filter(t => t.status === TaskStatuses.Completed);\r\n    }\r\n\r\n    const task =  tasksForTodolist.map(t => {\r\n        return <Task key={t.id}\r\n                     task={t}\r\n                     todolistId={props.todolistId}\r\n        />\r\n    })\r\n\r\n    const statusLoading = props.todolist.entityStatus === 'loading'\r\n\r\n    return <div>\r\n        <div className='title__wrapper'>\r\n            <EditableSpan value={props.title} onChange={changeTodoListTitle} disabled={statusLoading}/>\r\n            <IconButton onClick={() => removeTodolist(props.todolistId)} disabled={statusLoading}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </div>\r\n        <AddItemForm addItem={addTask} disabled={statusLoading}/>\r\n        <div>\r\n            {\r\n                task\r\n            }\r\n        </div>\r\n        <div>\r\n            <Button variant='outlined' color={props.filter === 'all' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onAllClickHandler}>All\r\n            </Button>\r\n            <Button variant='outlined' color={props.filter === 'active' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onActiveClickHandler}>Active\r\n            </Button>\r\n            <Button variant='outlined' color={props.filter === 'completed' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\App.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\TotolistsList.tsx",["97","98"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\store.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\features\\Todolists\\todolistReducer.ts",["99"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\stories\\EditableSpan.stories.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\app\\app.Reducer.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\ErrorSnackBar\\ErrorSnackBar.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\utils\\error-utils.ts",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":1,"nodeType":"106","endLine":6,"endColumn":2},{"ruleId":"104","severity":1,"message":"105","line":4,"column":1,"nodeType":"106","endLine":6,"endColumn":2},{"ruleId":"107","severity":1,"message":"108","line":19,"column":7,"nodeType":"109","endLine":19,"endColumn":27,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":23,"column":7,"nodeType":"109","endLine":23,"endColumn":27,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":26,"column":7,"nodeType":"109","endLine":26,"endColumn":27,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":31,"column":7,"nodeType":"109","endLine":31,"endColumn":9,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":35,"column":7,"nodeType":"109","endLine":35,"endColumn":17,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"108","line":47,"column":7,"nodeType":"109","endLine":47,"endColumn":9,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":51,"column":7,"nodeType":"109","endLine":51,"endColumn":9,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"118","line":54,"column":7,"nodeType":"109","endLine":54,"endColumn":9,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"118","line":57,"column":7,"nodeType":"109","endLine":57,"endColumn":9,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"122","line":17,"column":8,"nodeType":"109","endLine":17,"endColumn":10,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"108","line":21,"column":8,"nodeType":"109","endLine":21,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["131"],["132"],["133"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.todolistId'. Either include them or remove the dependency array.",["134"],"React Hook useCallback has a missing dependency: 'props.todolistId'. Either include it or remove the dependency array.",["135"],["136"],"React Hook useCallback has missing dependencies: 'changeFilter' and 'props.todolistId'. Either include them or remove the dependency array.",["137"],["138"],["139"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["140"],["141"],"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"142","fix":"145"},{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"151","fix":"154"},{"desc":"149","fix":"155"},{"desc":"149","fix":"156"},"Update the dependencies array to be: [dispatch, task.id, todolistId]",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},"Update the dependencies array to be: [dispatch, props.todolistId]",{"range":"161","text":"162"},{"range":"163","text":"162"},"Update the dependencies array to be: [dispatch]",{"range":"164","text":"165"},"Update the dependencies array to be: [changeFilter, props.todolistId]",{"range":"166","text":"167"},{"range":"168","text":"167"},{"range":"169","text":"167"},{"range":"170","text":"165"},{"range":"171","text":"165"},[688,708],"[dispatch, task.id, todolistId]",[951,971],[1103,1123],[1000,1002],"[dispatch, props.todolistId]",[1192,1202],[1646,1648],"[dispatch]",[1757,1759],"[changeFilter, props.todolistId]",[1873,1875],[1995,1997],[811,813],[924,926]]