[{"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\reportWebVitals.ts":"1","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\EditableSpan.tsx":"2","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\store.ts":"3","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\todolistReducer.ts":"4","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\todolist-api.ts":"5","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\tasksReducer.ts":"6","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\TodoList.tsx":"7","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\App.tsx":"8","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\Task.tsx":"9","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\index.tsx":"10","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\AddItemForm.tsx":"11","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\task-api.ts":"12"},{"size":440,"mtime":1618586872932,"results":"13","hashOfConfig":"14"},{"size":1310,"mtime":1618642085755,"results":"15","hashOfConfig":"14"},{"size":1206,"mtime":1618598976295,"results":"16","hashOfConfig":"14"},{"size":4164,"mtime":1618655777839,"results":"17","hashOfConfig":"14"},{"size":998,"mtime":1618600057031,"results":"18","hashOfConfig":"14"},{"size":8440,"mtime":1618655920167,"results":"19","hashOfConfig":"14"},{"size":3311,"mtime":1618649364533,"results":"20","hashOfConfig":"14"},{"size":3253,"mtime":1618649461018,"results":"21","hashOfConfig":"14"},{"size":1583,"mtime":1618649145299,"results":"22","hashOfConfig":"14"},{"size":603,"mtime":1618649293849,"results":"23","hashOfConfig":"14"},{"size":1432,"mtime":1618648982276,"results":"24","hashOfConfig":"14"},{"size":1775,"mtime":1618645417907,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14moyvu",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\reportWebVitals.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\EditableSpan.tsx",["52"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\store.ts",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\todolistReducer.ts",["53"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\todolist-api.ts",[],["54","55"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\state\\tasksReducer.ts",["56","57","58"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\TodoList.tsx",["59","60","61","62","63","64","65"],"import React, {useCallback, useEffect} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {Button, IconButton} from '@material-ui/core';\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {AddItemForm} from \"./Components/AddItemForm\";\r\nimport {EditableSpan} from \"./Components/EditableSpan\";\r\nimport Task from \"./Components/Task\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addTaskTC, fetchTasksTC} from \"./state/tasksReducer\";\r\nimport {changeFilterAC, deleteTodolistsTC, updateTodolistTitleTC} from \"./state/todolistReducer\";\r\nimport {TaskStatuses, TaskType} from \"./api/task-api\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    filter: FilterValuesType\r\n    id: string\r\n}\r\n\r\nexport const Todolist = React.memo((props: PropsType) =>  {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksTC(props.id))\r\n    },[])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        dispatch(addTaskTC(title.trim(), props.id))\r\n    },[dispatch]);\r\n    const changeTodoListTitle = useCallback((newTitle: string) => {\r\n\r\n        dispatch(updateTodolistTitleTC(props.id, newTitle))\r\n    },[dispatch, props.id])\r\n\r\n    const changeFilter = useCallback((value: FilterValuesType, taskId: string) => {\r\n        dispatch(changeFilterAC(value, taskId));\r\n    },[])\r\n\r\n    const removeTodolist = useCallback((id: string) => {\r\n        dispatch(deleteTodolistsTC(id))\r\n    },[])\r\n\r\n    const onAllClickHandler = useCallback(() => {\r\n        changeFilter(\"all\", props.id)\r\n    },[]);\r\n    const onActiveClickHandler = useCallback(() => {\r\n        changeFilter(\"active\", props.id)\r\n    },[]);\r\n    const onCompletedClickHandler = useCallback(() => {\r\n        changeFilter(\"completed\", props.id)\r\n    },[])\r\n\r\n\r\n    let allTodoLists = props.tasks;\r\n    let tasksForTodolist = allTodoLists\r\n    if (props.filter === \"active\") {\r\n        tasksForTodolist = allTodoLists.filter(t => t.status === TaskStatuses.New);\r\n    }\r\n    if (props.filter === \"completed\") {\r\n        tasksForTodolist = allTodoLists.filter(t => t.status === TaskStatuses.Completed);\r\n    }\r\n\r\n    const task =  tasksForTodolist.map(t => {\r\n        return <Task key={t.id}\r\n                     task={t}\r\n                     todolistId={props.id}\r\n        />\r\n    })\r\n\r\n    return <div>\r\n        <div className='title__wrapper'>\r\n            <EditableSpan value={props.title} onChange={changeTodoListTitle}/>\r\n            <IconButton onClick={() => removeTodolist(props.id)}><Delete/></IconButton>\r\n        </div>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                task\r\n            }\r\n        </div>\r\n        <div>\r\n            <Button variant='outlined' color={props.filter === 'all' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onAllClickHandler}>All\r\n            </Button>\r\n            <Button variant='outlined' color={props.filter === 'active' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onActiveClickHandler}>Active\r\n            </Button>\r\n            <Button variant='outlined' color={props.filter === 'completed' ? \"secondary\" : \"primary\"} size='small'\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\App.tsx",["66","67"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\Task.tsx",["68","69","70"],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\index.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\Components\\AddItemForm.tsx",[],"C:\\Frontend\\IT-incubator\\TodoList\\MyTodo\\TodoList\\src\\api\\task-api.ts",[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":44,"nodeType":"73","messageId":"74","endLine":1,"endColumn":55},{"ruleId":"71","severity":1,"message":"75","line":1,"column":22,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"75","line":4,"column":22,"nodeType":"73","messageId":"74","endLine":4,"endColumn":35},{"ruleId":"71","severity":1,"message":"80","line":48,"column":5,"nodeType":"73","messageId":"74","endLine":48,"endColumn":19},{"ruleId":"71","severity":1,"message":"81","line":55,"column":5,"nodeType":"73","messageId":"74","endLine":55,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":25,"column":7,"nodeType":"84","endLine":25,"endColumn":9,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":29,"column":7,"nodeType":"84","endLine":29,"endColumn":17,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":37,"column":7,"nodeType":"84","endLine":37,"endColumn":9,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"88","line":41,"column":7,"nodeType":"84","endLine":41,"endColumn":9,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"91","line":45,"column":7,"nodeType":"84","endLine":45,"endColumn":9,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"91","line":48,"column":7,"nodeType":"84","endLine":48,"endColumn":9,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"91","line":51,"column":7,"nodeType":"84","endLine":51,"endColumn":9,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":44,"column":7,"nodeType":"84","endLine":44,"endColumn":9,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"88","line":48,"column":7,"nodeType":"84","endLine":48,"endColumn":9,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"88","line":19,"column":7,"nodeType":"84","endLine":19,"endColumn":27,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"88","line":23,"column":7,"nodeType":"84","endLine":23,"endColumn":27,"suggestions":"99"},{"ruleId":"82","severity":1,"message":"88","line":26,"column":7,"nodeType":"84","endLine":26,"endColumn":27,"suggestions":"100"},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'ThunkDispatch' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'initialState_1' is assigned a value but never used.","'initialState_2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["103"],"React Hook useCallback has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["104"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["105"],["106"],"React Hook useCallback has missing dependencies: 'changeFilter' and 'props.id'. Either include them or remove the dependency array.",["107"],["108"],["109"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["110"],["111"],["112"],["113"],["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"121","fix":"124"},{"desc":"118","fix":"125"},{"desc":"118","fix":"126"},{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},{"desc":"127","fix":"130"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"131","text":"132"},{"range":"133","text":"132"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},{"range":"136","text":"135"},"Update the dependencies array to be: [changeFilter, props.id]",{"range":"137","text":"138"},{"range":"139","text":"138"},{"range":"140","text":"138"},{"range":"141","text":"135"},{"range":"142","text":"135"},"Update the dependencies array to be: [dispatch, task.id, todolistId]",{"range":"143","text":"144"},{"range":"145","text":"144"},{"range":"146","text":"144"},[895,897],"[dispatch, props.id]",[1015,1025],[1333,1335],"[dispatch]",[1445,1447],[1548,1550],"[changeFilter, props.id]",[1656,1658],[1770,1772],[1347,1349],[1459,1461],[675,695],"[dispatch, task.id, todolistId]",[959,979],[1122,1142]]